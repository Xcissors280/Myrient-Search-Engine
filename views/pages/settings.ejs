<div class="row h-50 w-100 m-0">
  <div class="col-sm-12 my-auto text-center">
    <pre style="font: 20px / 19px monospace; color: white; text-align: center; overflow: hidden;">
______  ___              _____            _____ 
___   |/  /____  ___________(_)_____________  /_
__  /|_/ /__  / / /_  ___/_  /_  _ \_  __ \  __/
_  /  / / _  /_/ /_  /   _  / /  __/  / / / /_  
/_/  /_/  _\__, / /_/    /_/  \___//_/ /_/\__/  
          /____/                                
                                Settings
        </pre>
    <div class="card w-auto mx-auto text-center d-inline-block p-3">
      <form>
        <div class="form-group">
          <h4>Search Columns</h4>
          <div class="">
            <% for(let field in defaultSettings.fields) { %>
            <label class="checkbox-inline p-1" for="<%= defaultSettings.fields[field] %>">
              <input type="checkbox" name="<%= defaultSettings.fields[field] %>" id="<%= defaultSettings.fields[field] %>" value="true">
              <%= defaultSettings.fields[field].charAt(0).toUpperCase() + defaultSettings.fields[field].slice(1) %>
            </label>
            <% } %>
          </div>
        </div>
        <div class="form-group">
          <h4>Search Score Multiplier</h4>
          <div class="">
            <% for(let field in defaultSettings.boost) { %>
            <div class="d-inline-block">
              <label for="<%= field %>boost"><%= field.charAt(0).toUpperCase() + field.slice(1) %></label>
              <input type="number" class="form-control bg-dark text-white" name="<%= field %>boost" id="<%= field %>boost" min="1" max="5">
            </div>
            <% } %>
          </div>
        </div>
        <div class="form-group">
          <h4>Extras</h4>
          <div class="form-group">
            <div class="d-inline-block">
              <label for="fuzzy">Fuzzy Value</label>
              <input type="number" class="form-control bg-dark text-white" id="fuzzy" name="fuzzy" step="0.01" min="0" max="1">
            </div>
          </div>
          <div class="form-group">
            <div class="">
              <label class="checkbox-inline p-1">
                <input type="checkbox" id="prefix" value="true">
                Allow Prefixes
              </label>
              <label class="checkbox-inline p-1">
                <input type="checkbox" id="combineWith" value="AND">
                Match All Words
              </label>
            </div>
          </div>
        </div>
        <button type="button" class="btn btn-secondary mb-2" action="#" id="saveSettings">Save Settings</button>
      </form>
    </div>
  </div>
</div>

<script defer>
  defaults = <%-JSON.stringify(defaultSettings)%>

  function handleSettings(saving = false) {
    //You're more than welcome to clean this up if you want to.
    for (let key in defaults) {
      if (defaults[key] instanceof Object && !(defaults[key] instanceof Array)) {
        for (let subkey in defaults[key]) {
          //load default if it doesn't exist
          if (!settings[key]) {
            //create an empty object if for some reason it doesn't exist
            settings[key] = {}
          }
          if (!settings[key][subkey]) {
            settings[key][subkey] = defaults[key][subkey]
          }

          if (typeof defaults[key][subkey] == "boolean") {
            if (saving) {
              settings[key][subkey] = document.getElementById(subkey + key).checked
            } else {
              document.getElementById(subkey + key).checked = settings[key][subkey]
            }
          } else {
            if (saving) {
              settings[key][subkey] = document.getElementById(subkey + key).value
            } else {
              document.getElementById(subkey + key).value = settings[key][subkey]
            }
          }
        }
      } else {
        //load in defaults if it doesn't exist and it's not a subkey
        if (typeof settings[key] == 'undefined') {
          settings[key] = defaults[key]
        }
        if (defaults[key] instanceof Array) {
          if (saving) {
            settings[key] = []
            for (let item in defaults[key]) {
              if (document.getElementById(defaults[key][item]).checked) {
                settings[key].push(defaults[key][item])
              }
            }
          } else {
            for (let item in settings[key]) {
              document.getElementById(settings[key][item]).checked = true
            }
          }
          continue
        } else {
          if (typeof defaults[key] == "boolean") {
            if (saving) {
              settings[key] = document.getElementById(key).checked
            } else {
              document.getElementById(key).checked = settings[key]
            }
          } else {
            let inputElem = document.getElementById(key)
            if (saving) {
              if (inputElem.getAttribute('type') == 'checkbox') {
                if (inputElem.checked) {
                  settings[key] = document.getElementById(key).value
                } else {
                  settings[key] = ''
                }
              }
            } else {
              if (inputElem.getAttribute('type') == 'checkbox') {
                if (settings[key]) {
                  inputElem.checked = true
                }
              } else {
                document.getElementById(key).value = settings[key]
              }
            }
          }
        }
      }
    }
  }

  async function loadSettings() {
    settingStore = localStorage.getItem('settings')
    settings = undefined
    if (settingStore) {
      try {
        settings = await JSON.parse(settingStore)
      } catch {
        console.log("Settings corrupted, saving defaults instead")
      }
    }
    if (typeof settings == 'undefined') {
      console.log("loading defaults")
      localStorage.setItem('settings', await JSON.stringify(defaults))
      settings = defaults
    }
    handleSettings()
  }

  async function saveSettings() {
    console.log("saving")
    handleSettings(true)
    localStorage.setItem('settings', await JSON.stringify(settings))
  }
  document.getElementById('saveSettings').onclick = saveSettings
  document.body.onload = loadSettings
</script>